{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Этот сервис предоставляет API для управления задачами.",
        "title": "Task Manager API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/tasks": {
            "get": {
                "description": "Возвращает все задачи, хранящиеся в системе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Получить список всех задач",
                "responses": {
                    "200": {
                        "description": "Список задач",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет новую задачу в список",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Создать новую задачу",
                "parameters": [
                    {
                        "description": "Данные для создания задачи",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TaskCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Задача успешно создана",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{taskID}": {
            "get": {
                "description": "Возвращает детали конкретной задачи по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Получить задачу по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID задачи",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Найденная задача",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Неверный ID задачи",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет задачу с указанным идентификатором",
                "tags": [
                    "tasks"
                ],
                "summary": "Удалить задачу по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID задачи для удаления",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Задача успешно удалена"
                    },
                    "400": {
                        "description": "Неверный ID задачи",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Задача не найдена для удаления",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": ["auth"],
                "summary": "Регистрация нового пользователя",
                "description": "Регистрирует нового пользователя по username и password",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": { "$ref": "#/definitions/models.UserRegisterPayload" }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": { "type": "string" }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или пользователь уже существует",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": { "type": "string" }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["auth"],
                "summary": "Аутентификация пользователя",
                "description": "Возвращает JWT-токен при успешном логине",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "credentials",
                        "required": true,
                        "schema": { "$ref": "#/definitions/models.UserLoginPayload" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": { "type": "string" }
                            }
                        }
                    },
                    "401": {
                        "description": "Неверные имя пользователя или пароль",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": { "type": "string" }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Task": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "description": "Описание задачи (опционально)\nexample: Нежирное, 1 литр",
                    "type": "string"
                },
                "id": {
                    "description": "Уникальный идентификатор задачи\nexample: 1",
                    "type": "integer"
                },
                "status": {
                    "description": "Статус задачи (например, \"pending\", \"completed\")\nexample: pending",
                    "type": "string"
                },
                "title": {
                    "description": "Название задачи\nrequired: true\nexample: Купить молоко",
                    "type": "string"
                }
            }
        },
        "models.TaskCreatePayload": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "description": "Описание задачи (опционально)\nexample: Сразу после ужина",
                    "type": "string"
                },
                "title": {
                    "description": "Название задачи\nrequired: true\nexample: Помыть посуду",
                    "type": "string"
                }
            }
        },
        "models.UserRegisterPayload": {
            "type": "object",
            "required": ["username", "password"],
            "properties": {
                "username": { "type": "string", "description": "Имя пользователя" },
                "password": { "type": "string", "description": "Пароль" }
            }
        },
        "models.UserLoginPayload": {
            "type": "object",
            "required": ["username", "password"],
            "properties": {
                "username": { "type": "string", "description": "Имя пользователя" },
                "password": { "type": "string", "description": "Пароль" }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": { "type": "integer", "description": "Уникальный идентификатор пользователя" },
                "username": { "type": "string", "description": "Имя пользователя" },
                "created_at": { "type": "string", "format": "date-time", "description": "Дата создания" }
            }
        }
    }
}